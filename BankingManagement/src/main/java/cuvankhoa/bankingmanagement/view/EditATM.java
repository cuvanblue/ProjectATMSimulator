/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cuvankhoa.bankingmanagement.view;

import cuvankhoa.bankingmanagement.view.*;
import cuvankhoa.bankingmanagement.model.*;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author TOTORO
 */
public class EditATM extends javax.swing.JDialog {

    /**
     * Creates new form AddATM
     */
    MainWindow mainWindow;
    DefaultTableModel dtm;
    public EditATM(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.mainWindow = (MainWindow)parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtID = new javax.swing.JTextField();
        ATMID2 = new javax.swing.JLabel();
        ATMID3 = new javax.swing.JLabel();
        txt50 = new javax.swing.JTextField();
        txt100 = new javax.swing.JTextField();
        ATMID4 = new javax.swing.JLabel();
        txt200 = new javax.swing.JTextField();
        ATMID5 = new javax.swing.JLabel();
        txt500 = new javax.swing.JTextField();
        ATMID6 = new javax.swing.JLabel();
        cbxStatus = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        cancel = new javax.swing.JButton();
        add = new javax.swing.JButton();
        ATMID7 = new javax.swing.JLabel();
        txtCash = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Edit ATM");
        setResizable(false);

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        ATMID2.setText("ATM ID to edit:");

        ATMID3.setText("Add 50quanity");

        txt50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt50ActionPerformed(evt);
            }
        });

        txt100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt100ActionPerformed(evt);
            }
        });

        ATMID4.setText("Add 100quanity");

        txt200.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt200ActionPerformed(evt);
            }
        });

        ATMID5.setText("Add 200quanity");

        txt500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt500ActionPerformed(evt);
            }
        });

        ATMID6.setText("Add 500quanity");

        jLabel1.setText("Status");

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        add.setText("Apply");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        ATMID7.setText("Add cash ");

        txtCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCashActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ATMID6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ATMID5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ATMID4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ATMID3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ATMID2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ATMID7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt50, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(txt100, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(txt200, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txt500, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(txtID)
                            .addComponent(txtCash)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(add)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ATMID2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ATMID7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ATMID3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt100, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ATMID4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt200, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ATMID5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt500, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ATMID6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxStatus)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(add))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txt50ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt50ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt50ActionPerformed

    private void txt100ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt100ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt100ActionPerformed

    private void txt200ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt200ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt200ActionPerformed

    private void txt500ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt500ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt500ActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void txtCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCashActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCashActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
         Atm currentATM = null;
        for(Atm i : mainWindow.currentBank.getAtm())
        {
            if(txtID.getText().equals(i.getAtmID()))
            {
                currentATM = i;
                break;
            }
        }
        if(currentATM != null && checkEmpty(txtCash) && checkEmpty(txt50) && checkEmpty(txt100) && checkEmpty(txt200) && checkEmpty(txt500)){
            try {
                    int cash = Integer.parseInt(txtCash.getText());
                    int q50 = Integer.parseInt(txt50.getText());
                    int q100 = Integer.parseInt(txt100.getText());
                    int q200 = Integer.parseInt(txt200.getText());
                    int q500 = Integer.parseInt(txt500.getText());
                    if(cash == (q50*50 + q100*100 + q200*200 + q500*500)*1000 && cash >= 0)
                    {
                        // sua atm
                        currentATM.setCash(currentATM.getCash() + cash);
                        currentATM.setQuanity50(currentATM.getQuanity50() + q50);
                        currentATM.setQuanity100(currentATM.getQuanity100() + q100);
                        currentATM.setQuanity200(currentATM.getQuanity200() + q200);
                        currentATM.setQuanity500(currentATM.getQuanity500() + q500);
                        currentATM.setStatus(cbxStatus.isSelected());
                        // update atm
                        mainWindow.updateATM(currentATM);
                        // load lai bang
                        dtm = (DefaultTableModel)mainWindow.atmTable.getModel();
                        int rows = dtm.getRowCount();
                        for(int i = rows-1;i>=0;i--)
                        {
                               dtm.removeRow(i);
                        }
                        int stt =1;
                        for (Atm i: mainWindow.currentBank.getAtm()) {
                           dtm.addRow(new Object[]{
                           stt, i.getAtmID(), i.getAddress(), i.getCash(), i.getQuanity50(), 
                               i.getQuanity100(), i.getQuanity200(), i.getQuanity500(), i.isStatus()});
                           stt++;
                       }
                       JOptionPane.showMessageDialog(this, "Cập nhật ATM " + currentATM.getAtmID()+ " thành công!");
                       this.dispose();
                    }
                    else{
                         JOptionPane.showMessageDialog(this, "Số tiền nhập vào không hợp lệ!");  
                    }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Dữ liệu nhập vào không hợp lệ!");  
                resetTextField();
            }
        }else{
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ các trường!");  
            resetTextField();
        }
       
    }//GEN-LAST:event_addActionPerformed
    private boolean checkEmpty(JTextField a)
    {
        if(a.getText().length()>0)
        {
            return true;
        }
        return false;
    }
    private  void resetTextField(){
        txtID.setText("");
        txt50.setText("");
        txt100.setText("");
        txt200.setText("");
        txt500.setText("");
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ATMID2;
    private javax.swing.JLabel ATMID3;
    private javax.swing.JLabel ATMID4;
    private javax.swing.JLabel ATMID5;
    private javax.swing.JLabel ATMID6;
    private javax.swing.JLabel ATMID7;
    private javax.swing.JButton add;
    private javax.swing.JButton cancel;
    private javax.swing.JCheckBox cbxStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txt100;
    private javax.swing.JTextField txt200;
    private javax.swing.JTextField txt50;
    private javax.swing.JTextField txt500;
    private javax.swing.JTextField txtCash;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
